{"version":3,"sources":["components/SearchBar.js","components/GenerateKeyBtn.js","components/InfoBar.js","components/HighlightedQueryStory.js","components/HighlightedLocation.js","components/HighlightedTimestamp.js","components/Story.js","components/Stories.js","components/LoadingStories.js","pages/Home.js","pages/Login.js","pages/Signup.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","queryStories","useState","query","setQuery","useEffect","className","onSubmit","evt","preventDefault","placeholder","type","value","onChange","target","GenerateKeyBtn","updateUserWithKey","user","logoutUser","key","onClick","fetch","method","headers","Headers","body","JSON","stringify","then","InfoBar","searchQuery","filteredStoriesLength","allStoriesLength","href","rel","to","HighlightedQueryStory","content","idx","length","highlightedStory","split","join","document","getElementById","innerHTML","id","HighlightedLocation","location","highlightedLocation","HighlightedTimestamp","timestamp","highlightedTimestamp","Story","story","includes","src","url","alt","Stories","stories","map","LoadingStories","Home","allStories","filteredStories","Login","loginUser","history","messages","setMessages","email","setEmail","password","setPassword","remember","setRemember","handleChange","name","a","async","creds","res","json","message","Error","push","checked","Signup","signupUser","setName","App","setAllStories","setFilteredStories","setSearchQuery","setUser","process","data","useCallback","filter","toLowerCase","storylength","userObj","ok","updatedUser","exact","path","render","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22822cae.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/SearchBar.scss';\n\nconst SearchBar = ({ queryStories }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n  };\n\n  const handleChange = evt => setQuery(evt.target.value);\n\n  useEffect(() => {\n    queryStories(query);\n  }, [queryStories, query]);\n\n  return (\n    <form \n      className='SearchBar-form' \n      onSubmit={handleSubmit}\n    >\n      <input \n        className='SearchBar-input' \n        placeholder='Search HONY stories' \n        type='text' \n        value={query} \n        onChange={handleChange} \n      />\n    </form>\n  );\n}\n\nexport default SearchBar;","import React from 'react';\nimport './css/GenerateKeyBtn.scss';\n\nconst GenerateKeyBtn = ({ updateUserWithKey, user, logoutUser }) => {\n\n  const fetchKey = () => {\n    fetch('/api/keys/new', {\n      method: 'POST',\n      headers: new Headers({ 'Content-Type': 'application/json' }),\n      body: JSON.stringify(user)\n    })\n    .then(() => {\n      // this pulls the updated user with the newly generated key from the backend\n      updateUserWithKey();\n    })\n  }\n\n  return (\n    <div className='GenerateKeyBtn-ctnr'>\n    { user.key ? (\n      <>\n        <p className='key-generated-msg'>\n          API Key Generated!\n        </p>\n        <button \n          className='logout-btn' \n          onClick={logoutUser}\n        >\n          Log Out\n        </button>\n      </>\n    ) : (\n      <>\n        <button \n          className='GenerateKeyBtn'\n          onClick={fetchKey}\n        >\n          Generate Key!\n        </button>\n        <button \n          className='logout-btn' \n          onClick={logoutUser}\n        >\n          Log Out\n        </button>\n      </>\n    )}\n    </div>\n  );\n}\n\nexport default GenerateKeyBtn;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/InfoBar.scss';\nimport GenerateKeyBtn from './GenerateKeyBtn';\n\nconst InfoBar = ({ user, logoutUser, searchQuery, filteredStoriesLength, allStoriesLength, updateUserWithKey }) => (\n  <div className=\"InfoBar\">\n  { searchQuery ? (\n    <>\n      <h3 className='results-msg'>\n        {filteredStoriesLength} result(s) match the search query: \"{searchQuery}\"\n      </h3>\n    { filteredStoriesLength ? (\n      <>\n        <h3 className='api-msg'>\n          API endpoint: \n        </h3>\n      { user ? (\n        <>\n        { user.key ? (\n          <h3 className='api-string'><a href={`https://hony.herokuapp.com/api/stories?search=${searchQuery}&key=${user.key}`} target='_blank' rel='noopener noreferrer'>\n            https://hony.herokuapp.com/api/stories?search={searchQuery}&key={user.key}\n            </a></h3>\n        ) : (\n          <h3 className='api-string'>\n            https://hony.herokuapp.com/api/stories?search={searchQuery}\n          </h3>\n        )}\n          <GenerateKeyBtn updateUserWithKey={updateUserWithKey} user={user} logoutUser={logoutUser} />\n        </>\n      ) : (\n        <>\n          <h3 className='api-string'>\n            https://hony.herokuapp.com/api/stories?search={searchQuery}\n          </h3>\n          <p className='login-for-key'>Please <Link to='/login'>log in</Link> or <Link to='/signup'>sign up</Link> to generate an API access key.</p>\n        </>\n      )}\n      </>\n    ) : null }\n    </>\n  ) : (\n    <>\n      <h3 className='results-msg'>\n        {allStoriesLength} stories\n      </h3>\n      <h3 className='api-msg'>\n        API endpoint: \n      </h3>\n    { user ? (\n      <>\n      { user.key ? (\n        <h3 className='api-string'><a href={`https://hony.herokuapp.com/api/stories?key=${user.key}`} target='_blank' rel='noopener noreferrer'>\n          https://hony.herokuapp.com/api/stories?key={user.key}\n        </a></h3>\n      ) : (\n        <h3 className='api-string'>\n          https://hony.herokuapp.com/api/stories\n        </h3>\n      )}\n        <GenerateKeyBtn updateUserWithKey={updateUserWithKey} user={user} logoutUser={logoutUser} />\n      </>\n    ) : (\n      <>\n        <h3 className='api-string'>\n          https://hony.herokuapp.com/api/stories\n        </h3>\n        <p className='login-for-key'>Please <Link to='/login'>log in</Link> or <Link to='/signup'>sign up</Link> to generate an API access key.</p>\n      </>\n    )}\n    </>\n  )}\n  </div>\n)\n\nexport default InfoBar;","import React, { useEffect } from 'react';\nimport './css/HighlightedQueryStory.scss';\n\nconst HighlightedQueryStory = ({ query, content, idx }) => {\n\n  useEffect(() => {\n    if (query.length > 2) {\n      let highlightedStory = content.split(query).join(`<span class=\"query-word\">${query}</span>`);\n      document.getElementById(`content-${idx}`).innerHTML = highlightedStory; \n    } else {\n      document.getElementById(`content-${idx}`).innerHTML = content;\n    }\n  }, [query, content, idx])\n\n  return (\n    <p className='Story-content' id={`content-${idx}`}>\n      {content}\n    </p>\n  );\n}\n\nexport default HighlightedQueryStory;","import React, { useEffect } from 'react';\nimport './css/HighlightedLocation.scss';\n\nconst HighlightedLocation = ({ query, location, idx }) => {\n\n  useEffect(() => {\n    if (query.length > 2) {\n      let highlightedLocation = location.split(query).join(`<span class=\"query-word\">${query}</span>`);\n      document.getElementById(`location-${idx}`).innerHTML = `(${highlightedLocation})`; \n    } else {\n      document.getElementById(`location-${idx}`).innerHTML = `(${location})`;\n    }\n  }, [query, location, idx])\n\n  return (\n    <p className='Story-location' id={`location-${idx}`}>\n      ({location})\n    </p>\n  );\n}\n\nexport default HighlightedLocation;","import React, { useEffect } from 'react';\nimport './css/HighlightedTimestamp.scss';\n\nconst HighlightedTimestamp = ({ query, timestamp, idx }) => {\n\n  useEffect(() => {\n    if (query.length > 2) {\n      let highlightedTimestamp = timestamp.split(query).join(`<span class=\"query-word\">${query}</span>`);\n      document.getElementById(`timestamp-${idx}`).innerHTML = highlightedTimestamp; \n    } else {\n      document.getElementById(`timestamp-${idx}`).innerHTML = timestamp;\n    }\n  }, [query, timestamp, idx])\n\n  return (\n    <p className='Story-timestamp' id={`timestamp-${idx}`}>\n      {timestamp}\n    </p>\n  );\n}\n\nexport default HighlightedTimestamp;","import React from 'react';\nimport './css/Story.scss';\nimport HighlightedQueryStory from './HighlightedQueryStory';\nimport HighlightedLocation from './HighlightedLocation';\nimport HighlightedTimestamp from './HighlightedTimestamp';\n\nconst Story = ({ idx, story, query }) => {\n\n  return (\n    <li className='Story' id={`story-${idx}`}>\n  \n      {query && story.timestamp.includes(query) ? (\n        <HighlightedTimestamp\n          query={query} \n          timestamp={story.timestamp}\n          idx={idx}\n        />\n      ) : (\n        <p className='Story-timestamp'>\n          {story.timestamp}\n        </p>\n      )}\n    \n      {query && story.content.includes(query) ? (\n        <HighlightedQueryStory \n          query={query} \n          content={story.content}\n          idx={idx}\n        />\n      ) : (\n      <p className='Story-content'>\n        {story.content}\n      </p>\n      )}\n  \n      {story.location && (query && story.location.includes(query) ? (\n        <HighlightedLocation \n          query={query} \n          location={story.location}\n          idx={idx}\n        />\n      ) : (\n        <p className='Story-location'>\n          ({story.location})\n        </p>\n      ))}\n  \n      <img \n        className='Story-img'\n        src={story.url} \n        alt=\"honypic\"\n      />\n  \n    </li>\n  );\n} \n\nexport default Story;","import React from 'react';\nimport './css/Stories.scss';\nimport Story from './Story';\n\nconst Stories = ({ stories, query }) => {\n\n  return (\n    <ul className='Stories' >\n      { stories.length ? (\n        stories.map((story, idx) => (\n          <Story \n            key={idx}\n            idx={idx}\n            story={story}\n            query={query}\n          />\n      ))\n      ) : null }\n    </ul>\n  );\n}\n\nexport default Stories;","import React from 'react';\nimport './css/LoadingStories.scss';\n\nconst LoadingStories = () => (\n  <div className=\"LoadingStories\">\n    Loading HONY stories...\n  </div>\n)\n\nexport default LoadingStories;","import React from 'react';\nimport './css/Home.scss';\nimport SearchBar from '../components/SearchBar';\nimport InfoBar from '../components/InfoBar';\nimport Stories from '../components/Stories';\nimport LoadingStories from '../components/LoadingStories';\n\nconst Home = ({ user, logoutUser, allStories, queryStories, searchQuery, filteredStories, updateUserWithKey }) => (\n  <div className='Home'>\n  { allStories.length ? (\n    <>\n      <SearchBar\n        queryStories={queryStories} \n      />\n      <InfoBar\n        user={user}\n        logoutUser={logoutUser}\n        searchQuery={searchQuery}\n        filteredStoriesLength={filteredStories.length}\n        allStoriesLength={allStories.length}\n        updateUserWithKey={updateUserWithKey}\n      />\n      <Stories\n        stories={ searchQuery ? filteredStories : allStories } \n        query={searchQuery}\n      />\n    </>\n  ) : (\n    <LoadingStories />\n  )}\n  </div>\n)\n\nexport default Home;","import React, { useState } from 'react';\nimport './css/Login.scss';\n\nconst Login = ({ loginUser, history }) => {\n\n  const [messages, setMessages] = useState([])\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [remember, setRemember] = useState('false');\n\n  const handleChange = evt => {\n    if (evt.target.name === 'email') {\n      setEmail(evt.target.value);\n    } else {\n      setPassword(evt.target.value);\n    }\n  }\n\n  const handleCheckboxChange = evt => {\n    setRemember(`${evt.target.checked}`);\n  }\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const creds = { email, password, remember }\n    // perform backend authentication\n    try {\n      const user = await fetch('/auth/login', {\n        method: 'POST',\n        headers: new Headers({'Content-Type': 'application/json'}),\n        body: JSON.stringify(creds)\n      }).then(res => res.json());\n      if (user.message) {\n        throw new Error();\n      } else {\n        // perform any now-logged-in actions, probably set user in app's state via calling function from here\n        loginUser(user);\n        history.push('/');\n      }\n    } catch (err) {\n      setMessages(['Please check your login details and try again.'])\n    }\n  }\n\n  return (\n    <form className=\"Login\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <input \n          className=\"input\" \n          type=\"email\" \n          name=\"email\" \n          placeholder=\"Your Email\" \n          value={email}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"field\">\n        <input \n          className=\"input\" \n          type=\"password\" \n          name=\"password\" \n          placeholder=\"Your Password\" \n          value={password}\n          onChange={handleChange} \n        />\n      </div>\n      <div className=\"field\">\n        <label className=\"checkbox\">\n          <input \n            className=\"checkbox-input\" \n            type=\"checkbox\" \n            onChange={handleCheckboxChange}\n          />\n          Remember me\n        </label>\n      </div>\n      <button className=\"login-btn\">Login</button>\n      { messages.length ? (\n        <p className='try-again'>{messages[0]}</p>\n      ) : null }\n    </form>\n  )\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport './css/Signup.scss';\n\nconst Signup = ({ signupUser, history }) => {\n  const [messages, setMessages] = useState([])\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = evt => {\n    if (evt.target.name === 'email') {\n      setEmail(evt.target.value);\n    } else if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    } else {\n      setPassword(evt.target.value);\n    }\n  }\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const creds = { email, name, password }\n    // perform backend authentication\n    try {\n      const user = await fetch('/auth/signup', {\n        method: 'POST',\n        headers: new Headers({'Content-Type': 'application/json'}),\n        body: JSON.stringify(creds)\n      }).then(res => res.json());\n      if (user.message) {\n        throw new Error();\n      } else {\n        // perform any now-logged-in actions, probably set user in app's state via calling function from here\n        signupUser(user);\n        history.push('/');\n      }\n    } catch (err) {\n      setMessages(['Email address already exists.'])\n    }\n  }\n\n  return (\n    <form className=\"Signup\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <input className=\"input\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={handleChange} />\n      </div>\n      <div className=\"field\">\n        <input className=\"input\" type=\"text\" name=\"name\" placeholder=\"Name\" value={name} onChange={handleChange} />\n      </div>\n      <div className=\"field\">\n        <input className=\"input\" type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={handleChange} />\n      </div>\n      <button className=\"signup-btn\">Sign Up</button>\n    { messages.length ? (\n      <p className='try-again'>{messages[0]}</p>\n    ) : null }\n    </form>\n  )\n}\n\nexport default Signup;","import React, { useEffect, useState, useCallback } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\n\nconst App = () => {\n\n  const [allStories, setAllStories] = useState([]);\n  const [filteredStories, setFilteredStories] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [user, setUser] = useState(null);\n\n  // once the app mounts, this loads all stories from the fetch endpoint into state as 'stories'\n  useEffect(() => {\n    fetch(`/api/stories?key=${process.env.REACT_APP_API_KEY}`).then(res => \n      res.json().then(data => {\n        setAllStories(data.stories);\n      })\n    );\n  }, []);\n\n  // this is triggered when something is typed in the search bar, the stories are filtered based on whether they include what was typed in the search bar\n  // this is all frontend filtering using JavaScript methods\n  const queryStories = useCallback(query => {\n    setSearchQuery(query);\n    setFilteredStories(allStories.filter(story => {\n      return (\n        (story.location && \n          story.location.toLowerCase().includes(query.toLowerCase())) ||\n        story.storylength.toLowerCase().includes(query.toLowerCase()) ||\n        story.content.toLowerCase().includes(query.toLowerCase()) ||\n        story.timestamp.toLowerCase().includes(query.toLowerCase())\n      );\n    }));\n  }, [allStories]);\n\n  const loginUser = userObj => {\n    setUser(userObj);\n  }\n\n  const logoutUser = () => {\n    fetch('/auth/logout').then(res => {\n      if (res.ok) setUser(null);\n    });\n  }\n\n  const signupUser = userObj => {\n    setUser(userObj);\n  }\n\n  const updateUserWithKey = () => {\n    // make it so that the key generator backend view function requires a valid user that doesn't have a key yet\n    // in that function, update the user's key field\n    // also assign the key an owner\n    // here, all we need to do is re-pull the updated user and setUser\n    fetch(`/api/users/${user.id}`)\n    .then(res => res.json())\n    .then(updatedUser => setUser(updatedUser))\n    // with a user.key available, frontend will rerender as desired\n  }\n\n  return (\n    <div className='App' >\n      <Switch>\n        <Route exact path='/' render={({ history }) => (\n          <Home\n            history={history}\n            user={user}\n            logoutUser={logoutUser}\n            allStories={allStories}\n            queryStories={queryStories}\n            searchQuery={searchQuery}\n            filteredStories={filteredStories}\n            updateUserWithKey={updateUserWithKey}\n          />\n        )}/>\n        <Route exact path='/login' render={({ history }) => (\n          <Login \n            history={history}\n            loginUser={loginUser}\n          />\n        )}/>\n        <Route exact path='/signup' render={({ history }) => (\n          <Signup \n            history={history}\n            signupUser={signupUser}\n          />\n        )}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}